{"version":3,"sources":["components/Forms/Form.js","components/UserList/UserItem.js","components/UserList/UsersList.js","components/Section/Section.js","components/Forms/Filter.js","App.js","index.js"],"names":["INITIAL_STATE","name","number","Form","state","handlerChange","target","value","setState","handlerSubmit","e","preventDefault","addContact","props","id","shortid","generate","reset","this","onSubmit","className","type","onChange","pattern","title","required","htmlFor","Component","UserItem","onClick","UserList","users","map","user","Section","children","Filter","filter","handleFilter","App","contacts","addContactToList","newContact","newContactName","toLowerCase","find","contact","alert","prevState","handleFilterContacts","filterValue","handlerDeleteUser","deleteItemId","normalizedName","contactForRender","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"knBAKMA,EAAgB,CAAEC,KAAM,GAAIC,OAAQ,IAEpCC,E,4MACJC,M,eACKJ,G,EAGLK,cAAgB,YAAiB,IAAdC,EAAa,EAAbA,OACTL,EAAgBK,EAAhBL,KAAMM,EAAUD,EAAVC,MACd,EAAKC,SAAL,eAAiBP,EAAOM,K,EAG1BE,cAAgB,SAAAC,GACdA,EAAEC,iBACF,MAAyB,EAAKP,MAAtBH,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAOdU,EANuB,EAAKC,MAApBD,YACW,CACjBE,GAAIC,IAAQC,WACZf,OACAC,WAGF,EAAKe,S,EAGPA,MAAQ,WACN,EAAKT,SAAL,eAAmBR,K,4CAGrB,WACE,IAAQK,EAAiCa,KAAjCb,cAAeI,EAAkBS,KAAlBT,cACvB,EAAyBS,KAAKd,MAAtBH,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACd,OACE,uBAAMiB,SAAUV,EAAeW,UAAU,OAAzC,UACE,sBAAKA,UAAU,UAAf,UACE,wBAAOA,UAAU,QAAjB,iBAEE,uBACEN,GAAG,OACHO,KAAK,OACLpB,KAAK,OACLM,MAAON,EACPmB,UAAU,QACVE,SAAUjB,EACVkB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAIZ,wBAAOC,QAAQ,SAASN,UAAU,QAAlC,mBAEE,uBACEN,GAAG,SACHO,KAAK,MACLpB,KAAK,SACLM,MAAOL,EACPkB,UAAU,QACVE,SAAUjB,EACVkB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,UAId,wBAAQJ,KAAK,SAASD,UAAU,MAAhC,gC,GA/DWO,aA2EJxB,I,MC3DAyB,MApBf,YAAkD,IAA9Bd,EAA6B,EAA7BA,GAAIb,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,OAAQ2B,EAAW,EAAXA,QACpC,OACE,qBAAIT,UAAU,OAAd,UACE,iCACGnB,EADH,KACWC,KAEX,wBAAQY,GAAIA,EAAIO,KAAK,SAASQ,QAASA,EAAST,UAAU,MAA1D,wBCqBSU,MA1Bf,YAAuC,IAAnBC,EAAkB,EAAlBA,MAAOF,EAAW,EAAXA,QACzB,OACE,oBAAIT,UAAU,OAAd,SACGW,EAAMC,KAAI,SAAAC,GAAI,OACb,cAAC,EAAD,CAEEhC,KAAMgC,EAAKhC,KACXC,OAAQ+B,EAAK/B,OACb2B,QAASA,EACTf,GAAImB,EAAKnB,IAJJmB,EAAKnB,U,MCQLoB,MAdf,YAAuC,IAApBV,EAAmB,EAAnBA,MAAOW,EAAY,EAAZA,SACxB,OACE,0BAASf,UAAU,UAAnB,UACGI,GAAS,oBAAIJ,UAAU,QAAd,SAAuBI,IAChCW,MCgBQC,MApBf,YAA2C,IAAzBC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,aACxB,OACE,wBAAOZ,QAAQ,SAASN,UAAU,oBAAlC,kCAEE,uBACEN,GAAG,SACHO,KAAK,OACLpB,KAAK,SACLM,MAAO8B,EACPf,SAAUgB,EACVlB,UAAU,0B,QCLZmB,E,4MACJnC,MAAQ,CACNoC,SAAUT,EACVM,OAAQ,I,EAGVI,iBAAmB,SAAAC,GACjB,IAAMC,EAAiBD,EAAWzC,KAAK2C,cACjB,EAAKxC,MAAMoC,SAASK,MAAK,SAAAC,GAC7C,OAAOA,EAAQ7C,KAAK2C,gBAAkBD,KAGtCI,MAAM,GAAD,OAAIL,EAAWzC,KAAf,2BAGP,EAAKO,UAAS,SAAAwC,GAAS,MAAK,CAC1BR,SAAS,GAAD,mBAAMQ,EAAUR,UAAhB,CAA0BE,S,EAItCO,qBAAuB,SAAAvC,GACrB,IAAMwC,EAAcxC,EAAEJ,OAAOC,MAC7B,EAAKC,SAAS,CAAE6B,OAAQa,K,EAG1BC,kBAAoB,YAAiB,IAC7BC,EAD4B,EAAb9C,OACOQ,GAC5B,EAAKN,UAAS,SAAAwC,GAAS,MAAK,CAC1BR,SAAUQ,EAAUR,SAASH,QAC3B,SAAAS,GAAO,OAAIA,EAAQhC,KAAOsC,U,4CAKhC,WACE,MAA6BlC,KAAKd,MAA1BoC,EAAR,EAAQA,SAAUH,EAAlB,EAAkBA,OACVI,EAA8DvB,KAA9DuB,iBAAkBQ,EAA4C/B,KAA5C+B,qBAAsBE,EAAsBjC,KAAtBiC,kBAC1CE,EAAiBhB,EAAOO,cACxBU,EAAmBd,EAASH,QAAO,SAAAS,GAAO,OAC9CA,EAAQ7C,KAAK2C,cAAcW,SAASF,MAEtC,OACE,sBAAKjC,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,uBACA,cAAC,EAAD,UACE,cAAC,EAAD,CAAMR,WAAY6B,MAEpB,eAAC,EAAD,CAASjB,MAAM,WAAf,UACE,cAAC,EAAD,CAAQa,OAAQA,EAAQC,aAAcW,IACtC,cAAC,EAAD,CAAUlB,MAAOuB,EAAkBzB,QAASsB,c,GAjDpCxB,aAwDHY,IC3DfiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c9c90035.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport shortid from 'shortid';\r\nimport PropTypes from 'prop-types';\r\nimport './Forms.scss';\r\n\r\nconst INITIAL_STATE = { name: '', number: '' };\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    ...INITIAL_STATE,\r\n  };\r\n\r\n  handlerChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handlerSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const { addContact } = this.props;\r\n    const newContact = {\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    };\r\n    addContact(newContact);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ ...INITIAL_STATE });\r\n  };\r\n\r\n  render() {\r\n    const { handlerChange, handlerSubmit } = this;\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={handlerSubmit} className=\"form\">\r\n        <div className=\"wrapper\">\r\n          <label className=\"label\">\r\n            Name\r\n            <input\r\n              id=\"name\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              className=\"input\"\r\n              onChange={handlerChange}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n            />\r\n          </label>\r\n\r\n          <label htmlFor=\"number\" className=\"label\">\r\n            Number\r\n            <input\r\n              id=\"number\"\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={number}\r\n              className=\"input\"\r\n              onChange={handlerChange}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n            />\r\n          </label>\r\n        </div>\r\n        <button type=\"submit\" className=\"btn\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nForm.propTypes = {\r\n  addContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Form;\r\n","import PropTypes from 'prop-types';\r\nimport './User.scss';\r\n\r\nfunction UserItem({ id, name, number, onClick }) {\r\n  return (\r\n    <li className=\"item\">\r\n      <span>\r\n        {name}: {number}\r\n      </span>\r\n      <button id={id} type=\"button\" onClick={onClick} className=\"btn\">\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nUserItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default UserItem;\r\n","import UserItem from './UserItem';\r\nimport PropTypes from 'prop-types';\r\nimport './User.scss';\r\n\r\nfunction UserList({ users, onClick }) {\r\n  return (\r\n    <ul className=\"list\">\r\n      {users.map(user => (\r\n        <UserItem\r\n          key={user.id}\r\n          name={user.name}\r\n          number={user.number}\r\n          onClick={onClick}\r\n          id={user.id}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\nUserList.propTypes = {\r\n  users: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default UserList;\r\n","import PropTypes from 'prop-types';\r\nimport './Section.scss';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section className=\"section\">\r\n      {title && <h2 className=\"title\">{title}</h2>}\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import './Forms.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Filter({ filter, handleFilter }) {\r\n  return (\r\n    <label htmlFor=\"filter\" className=\"label filterLabel\">\r\n      Find contacts by name\r\n      <input\r\n        id=\"filter\"\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={handleFilter}\r\n        className=\"input filterInput\"\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  handleFilter: PropTypes.func.isRequired,\r\n};\r\nexport default Filter;\r\n","import './App.css';\nimport { Component } from 'react';\nimport Form from './components/Forms/Form';\nimport UserList from './components/UserList/UsersList';\nimport Section from './components/Section/Section';\nimport Filter from './components/Forms/Filter';\nimport users from './phonebook.json';\n\nclass App extends Component {\n  state = {\n    contacts: users,\n    filter: '',\n  };\n\n  addContactToList = newContact => {\n    const newContactName = newContact.name.toLowerCase();\n    const doubleContact = this.state.contacts.find(contact => {\n      return contact.name.toLowerCase() === newContactName;\n    });\n    if (doubleContact) {\n      alert(`${newContact.name} is already in contact`);\n      return;\n    }\n    this.setState(prevState => ({\n      contacts: [...prevState.contacts, newContact],\n    }));\n  };\n\n  handleFilterContacts = e => {\n    const filterValue = e.target.value;\n    this.setState({ filter: filterValue });\n  };\n\n  handlerDeleteUser = ({ target }) => {\n    const deleteItemId = target.id;\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(\n        contact => contact.id !== deleteItemId,\n      ),\n    }));\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const { addContactToList, handleFilterContacts, handlerDeleteUser } = this;\n    const normalizedName = filter.toLowerCase();\n    const contactForRender = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedName),\n    );\n    return (\n      <div className=\"App\">\n        <h1 className=\"title\">Phonebook</h1>\n        <Section>\n          <Form addContact={addContactToList} />\n        </Section>\n        <Section title=\"Contacts\">\n          <Filter filter={filter} handleFilter={handleFilterContacts} />\n          <UserList users={contactForRender} onClick={handlerDeleteUser} />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}